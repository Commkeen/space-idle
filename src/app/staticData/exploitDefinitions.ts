import { ResourceCollection } from '../models/resource';
import { Effect, BaseProductionEffect } from './effectDefinitions';

export class ExploitDefinition {
  public cost: ResourceCollection = new ResourceCollection();
  public effects: Effect[] = [];
  constructor (
    public name: string,
    public description: string
  ) {}

  public addCost(resource: string, amount: number): ExploitDefinition {
    this.cost.add(resource, amount);
    return this;
  }

  public addEffect(bonusEffect: Effect): ExploitDefinition {
    this.effects.push(bonusEffect);
    return this;
  }

  public addProduction(resource: string, amount: number): ExploitDefinition {
    const bonusEffect = new BaseProductionEffect(resource, amount);
    this.effects.push(bonusEffect);
    return this;
  }
}

export const EXPLOIT_LIBRARY: ExploitDefinition[] = [
  new ExploitDefinition('iron mineshaft', 'extracts iron').addCost('duranium', 5).addCost('metal', 20)
                                                                    .addProduction('metal', 0.4),
  new ExploitDefinition('copper mineshaft', 'extracts copper').addCost('metal', 50).addProduction('metal', 0.2),
  new ExploitDefinition('silver mineshaft', 'extracts silver').addCost('metal', 50)
                                                              .addProduction('metal', 0.2).addProduction('rareMetal', 0.1),
  new ExploitDefinition('gold mineshaft', 'extracts gold').addCost('metal', 50)
                                                              .addProduction('metal', 0.2).addProduction('rareMetal', 0.1),
  new ExploitDefinition('methane extractor', 'collects methane').addCost('duranium', 30).addProduction('hydrocarbon', 0.3),
  new ExploitDefinition('energy recombiner', 'generates power').addCost('nanofiber', 10).addProduction('power', 10),
  new ExploitDefinition('helium extractor', 'produces gases').addCost('duranium', 6).addProduction('gas', 0.5),
  new ExploitDefinition('crawler', 'produces glittersand').addCost('nanofiber', 10).addProduction('glittersand', 0.2),
  new ExploitDefinition('charybdin drill', 'produces charybdin').addCost('duranium', 50).addProduction('charybdin', 0.2),
  new ExploitDefinition('synaptite scoop', 'produces synaptite').addCost('duranium', 500).addProduction('synaptite', 0.2),
  new ExploitDefinition('dyene collector', 'produces dyene').addCost('duranium', 10).addProduction('dyene', 0.2)
];
