import { ResourceCollection } from '../models/resource';
import { BonusEffect, ResourceGenerationBonusEffect } from './effectDefinitions';

export class ExploitDefinition {
  public cost: ResourceCollection = new ResourceCollection();
  public effects: BonusEffect[] = [];
  constructor (
    public name: string,
    public description: string
  ) {}

  public addCost(resource: string, amount: number): ExploitDefinition {
    this.cost.add(resource, amount);
    return this;
  }

  public addEffect(bonusEffect: BonusEffect): ExploitDefinition {
    this.effects.push(bonusEffect);
    return this;
  }

  public addProduction(resource: string, amount: number): ExploitDefinition {
    const bonusEffect = new ResourceGenerationBonusEffect(resource, amount);
    this.effects.push(bonusEffect);
    return this;
  }
}

export const EXPLOIT_LIBRARY: ExploitDefinition[] = [
  new ExploitDefinition('iron mineshaft', 'some more metal for you').addCost('duranium', 5).addCost('metal', 20)
                                                                    .addProduction('metal', 0.4),
  new ExploitDefinition('copper mineshaft', 'a bit of metal for you').addCost('metal', 50).addProduction('metal', 0.2),
  new ExploitDefinition('methane extractor', 'collects methane').addCost('duranium', 30),
  new ExploitDefinition('energy recombiner', 'generates power').addCost('nanofiber', 10)
];
